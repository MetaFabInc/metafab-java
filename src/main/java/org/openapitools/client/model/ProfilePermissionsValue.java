/*
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.metafab.client.JSON;

/**
 * Key should be the contract address, value is the permissions object request for the contract.
 */
@ApiModel(description = "Key should be the contract address, value is the permissions object request for the contract.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-19T17:38:27.237153-05:00[America/New_York]")
public class ProfilePermissionsValue {
  public static final String SERIALIZED_NAME_CHAIN = "chain";
  @SerializedName(SERIALIZED_NAME_CHAIN)
  private String chain;

  public static final String SERIALIZED_NAME_SCOPES = "scopes";
  @SerializedName(SERIALIZED_NAME_SCOPES)
  private List<String> scopes = null;

  public static final String SERIALIZED_NAME_FUNCTIONS = "functions";
  @SerializedName(SERIALIZED_NAME_FUNCTIONS)
  private List<String> functions = null;

  public static final String SERIALIZED_NAME_ERC20_LIMIT = "erc20Limit";
  @SerializedName(SERIALIZED_NAME_ERC20_LIMIT)
  private Integer erc20Limit;

  public static final String SERIALIZED_NAME_ERC1155_LIMITS = "erc1155Limits";
  @SerializedName(SERIALIZED_NAME_ERC1155_LIMITS)
  private Map<String, Integer> erc1155Limits = null;

  public ProfilePermissionsValue() {
  }

  public ProfilePermissionsValue chain(String chain) {
    
    this.chain = chain;
    return this;
  }

   /**
   * The target chain for the contract and related permissions.
   * @return chain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target chain for the contract and related permissions.")

  public String getChain() {
    return chain;
  }


  public void setChain(String chain) {
    this.chain = chain;
  }


  public ProfilePermissionsValue scopes(List<String> scopes) {
    
    this.scopes = scopes;
    return this;
  }

  public ProfilePermissionsValue addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * An optional array of valid permissioning scopes.
   * @return scopes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional array of valid permissioning scopes.")

  public List<String> getScopes() {
    return scopes;
  }


  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }


  public ProfilePermissionsValue functions(List<String> functions) {
    
    this.functions = functions;
    return this;
  }

  public ProfilePermissionsValue addFunctionsItem(String functionsItem) {
    if (this.functions == null) {
      this.functions = new ArrayList<>();
    }
    this.functions.add(functionsItem);
    return this;
  }

   /**
   * An optional array of contract functions to request permission for.
   * @return functions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional array of contract functions to request permission for.")

  public List<String> getFunctions() {
    return functions;
  }


  public void setFunctions(List<String> functions) {
    this.functions = functions;
  }


  public ProfilePermissionsValue erc20Limit(Integer erc20Limit) {
    
    this.erc20Limit = erc20Limit;
    return this;
  }

   /**
   * A maximum lifetime limit of erc20 that can be tranferred for this contract address.
   * @return erc20Limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A maximum lifetime limit of erc20 that can be tranferred for this contract address.")

  public Integer getErc20Limit() {
    return erc20Limit;
  }


  public void setErc20Limit(Integer erc20Limit) {
    this.erc20Limit = erc20Limit;
  }


  public ProfilePermissionsValue erc1155Limits(Map<String, Integer> erc1155Limits) {
    
    this.erc1155Limits = erc1155Limits;
    return this;
  }

  public ProfilePermissionsValue putErc1155LimitsItem(String key, Integer erc1155LimitsItem) {
    if (this.erc1155Limits == null) {
      this.erc1155Limits = new HashMap<>();
    }
    this.erc1155Limits.put(key, erc1155LimitsItem);
    return this;
  }

   /**
   * An object mapping erc1155 ids to maximum lifetime transfer limits of each permitted item id supplied for this contract address.
   * @return erc1155Limits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An object mapping erc1155 ids to maximum lifetime transfer limits of each permitted item id supplied for this contract address.")

  public Map<String, Integer> getErc1155Limits() {
    return erc1155Limits;
  }


  public void setErc1155Limits(Map<String, Integer> erc1155Limits) {
    this.erc1155Limits = erc1155Limits;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfilePermissionsValue profilePermissionsValue = (ProfilePermissionsValue) o;
    return Objects.equals(this.chain, profilePermissionsValue.chain) &&
        Objects.equals(this.scopes, profilePermissionsValue.scopes) &&
        Objects.equals(this.functions, profilePermissionsValue.functions) &&
        Objects.equals(this.erc20Limit, profilePermissionsValue.erc20Limit) &&
        Objects.equals(this.erc1155Limits, profilePermissionsValue.erc1155Limits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chain, scopes, functions, erc20Limit, erc1155Limits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfilePermissionsValue {\n");
    sb.append("    chain: ").append(toIndentedString(chain)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    functions: ").append(toIndentedString(functions)).append("\n");
    sb.append("    erc20Limit: ").append(toIndentedString(erc20Limit)).append("\n");
    sb.append("    erc1155Limits: ").append(toIndentedString(erc1155Limits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chain");
    openapiFields.add("scopes");
    openapiFields.add("functions");
    openapiFields.add("erc20Limit");
    openapiFields.add("erc1155Limits");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProfilePermissionsValue
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ProfilePermissionsValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProfilePermissionsValue is not found in the empty JSON string", ProfilePermissionsValue.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ProfilePermissionsValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProfilePermissionsValue` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("chain") != null && !jsonObj.get("chain").isJsonNull()) && !jsonObj.get("chain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chain").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("scopes") != null && !jsonObj.get("scopes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `scopes` to be an array in the JSON string but got `%s`", jsonObj.get("scopes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("functions") != null && !jsonObj.get("functions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `functions` to be an array in the JSON string but got `%s`", jsonObj.get("functions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProfilePermissionsValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProfilePermissionsValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProfilePermissionsValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProfilePermissionsValue.class));

       return (TypeAdapter<T>) new TypeAdapter<ProfilePermissionsValue>() {
           @Override
           public void write(JsonWriter out, ProfilePermissionsValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProfilePermissionsValue read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProfilePermissionsValue given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProfilePermissionsValue
  * @throws IOException if the JSON string is invalid with respect to ProfilePermissionsValue
  */
  public static ProfilePermissionsValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProfilePermissionsValue.class);
  }

 /**
  * Convert an instance of ProfilePermissionsValue to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

