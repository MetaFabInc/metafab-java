/*
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.metafab.client.JSON;

/**
 * SetShopOfferRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-19T17:38:27.237153-05:00[America/New_York]")
public class SetShopOfferRequest {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INPUT_COLLECTION_ADDRESS = "inputCollectionAddress";
  @SerializedName(SERIALIZED_NAME_INPUT_COLLECTION_ADDRESS)
  private String inputCollectionAddress;

  public static final String SERIALIZED_NAME_INPUT_COLLECTION_ID = "inputCollectionId";
  @SerializedName(SERIALIZED_NAME_INPUT_COLLECTION_ID)
  private String inputCollectionId;

  public static final String SERIALIZED_NAME_INPUT_COLLECTION_ITEM_IDS = "inputCollectionItemIds";
  @SerializedName(SERIALIZED_NAME_INPUT_COLLECTION_ITEM_IDS)
  private List<Integer> inputCollectionItemIds = null;

  public static final String SERIALIZED_NAME_INPUT_COLLECTION_ITEM_AMOUNTS = "inputCollectionItemAmounts";
  @SerializedName(SERIALIZED_NAME_INPUT_COLLECTION_ITEM_AMOUNTS)
  private List<Integer> inputCollectionItemAmounts = null;

  public static final String SERIALIZED_NAME_INPUT_CURRENCY_ADDRESS = "inputCurrencyAddress";
  @SerializedName(SERIALIZED_NAME_INPUT_CURRENCY_ADDRESS)
  private String inputCurrencyAddress;

  public static final String SERIALIZED_NAME_INPUT_CURRENCY_ID = "inputCurrencyId";
  @SerializedName(SERIALIZED_NAME_INPUT_CURRENCY_ID)
  private String inputCurrencyId;

  public static final String SERIALIZED_NAME_INPUT_CURRENCY_AMOUNT = "inputCurrencyAmount";
  @SerializedName(SERIALIZED_NAME_INPUT_CURRENCY_AMOUNT)
  private BigDecimal inputCurrencyAmount;

  public static final String SERIALIZED_NAME_OUTPUT_COLLECTION_ADDRESS = "outputCollectionAddress";
  @SerializedName(SERIALIZED_NAME_OUTPUT_COLLECTION_ADDRESS)
  private String outputCollectionAddress;

  public static final String SERIALIZED_NAME_OUTPUT_COLLECTION_ID = "outputCollectionId";
  @SerializedName(SERIALIZED_NAME_OUTPUT_COLLECTION_ID)
  private String outputCollectionId;

  public static final String SERIALIZED_NAME_OUTPUT_COLLECTION_ITEM_IDS = "outputCollectionItemIds";
  @SerializedName(SERIALIZED_NAME_OUTPUT_COLLECTION_ITEM_IDS)
  private List<Integer> outputCollectionItemIds = null;

  public static final String SERIALIZED_NAME_OUTPUT_COLLECTION_ITEM_AMOUNTS = "outputCollectionItemAmounts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_COLLECTION_ITEM_AMOUNTS)
  private List<Integer> outputCollectionItemAmounts = null;

  public static final String SERIALIZED_NAME_OUTPUT_CURRENCY_ADDRESS = "outputCurrencyAddress";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CURRENCY_ADDRESS)
  private String outputCurrencyAddress;

  public static final String SERIALIZED_NAME_OUTPUT_CURRENCY_ID = "outputCurrencyId";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CURRENCY_ID)
  private String outputCurrencyId;

  public static final String SERIALIZED_NAME_OUTPUT_CURRENCY_AMOUNT = "outputCurrencyAmount";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CURRENCY_AMOUNT)
  private BigDecimal outputCurrencyAmount;

  public static final String SERIALIZED_NAME_MAX_USES = "maxUses";
  @SerializedName(SERIALIZED_NAME_MAX_USES)
  private Integer maxUses;

  public SetShopOfferRequest() {
  }

  public SetShopOfferRequest id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * A unique offer id to use for this offer for the shop. If an existing offer id is used, the current offer will be updated but the existing number of uses will be kept. If you want to reset the number of uses for an existing offer, first remove it using the remove offer endpoint, then set it.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1337", required = true, value = "A unique offer id to use for this offer for the shop. If an existing offer id is used, the current offer will be updated but the existing number of uses will be kept. If you want to reset the number of uses for an existing offer, first remove it using the remove offer endpoint, then set it.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public SetShopOfferRequest inputCollectionAddress(String inputCollectionAddress) {
    
    this.inputCollectionAddress = inputCollectionAddress;
    return this;
  }

   /**
   * A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for input items required by this offer. &#x60;inputCollectionAddress&#x60; or &#x60;inputCollectionId&#x60; can optionally be provided.
   * @return inputCollectionAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for input items required by this offer. `inputCollectionAddress` or `inputCollectionId` can optionally be provided.")

  public String getInputCollectionAddress() {
    return inputCollectionAddress;
  }


  public void setInputCollectionAddress(String inputCollectionAddress) {
    this.inputCollectionAddress = inputCollectionAddress;
  }


  public SetShopOfferRequest inputCollectionId(String inputCollectionId) {
    
    this.inputCollectionId = inputCollectionId;
    return this;
  }

   /**
   * A valid MetaFab collection id that represents the collection for input items required by this offer. &#x60;inputCollectionAddress&#x60; or &#x60;inputCollectionId&#x60; can optionally be provided.
   * @return inputCollectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A valid MetaFab collection id that represents the collection for input items required by this offer. `inputCollectionAddress` or `inputCollectionId` can optionally be provided.")

  public String getInputCollectionId() {
    return inputCollectionId;
  }


  public void setInputCollectionId(String inputCollectionId) {
    this.inputCollectionId = inputCollectionId;
  }


  public SetShopOfferRequest inputCollectionItemIds(List<Integer> inputCollectionItemIds) {
    
    this.inputCollectionItemIds = inputCollectionItemIds;
    return this;
  }

  public SetShopOfferRequest addInputCollectionItemIdsItem(Integer inputCollectionItemIdsItem) {
    if (this.inputCollectionItemIds == null) {
      this.inputCollectionItemIds = new ArrayList<>();
    }
    this.inputCollectionItemIds.add(inputCollectionItemIdsItem);
    return this;
  }

   /**
   * An array of item ids from the provided input collection that are required to use this offer. Input items are transferred from the wallet to the shop contract upon using an offer.
   * @return inputCollectionItemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of item ids from the provided input collection that are required to use this offer. Input items are transferred from the wallet to the shop contract upon using an offer.")

  public List<Integer> getInputCollectionItemIds() {
    return inputCollectionItemIds;
  }


  public void setInputCollectionItemIds(List<Integer> inputCollectionItemIds) {
    this.inputCollectionItemIds = inputCollectionItemIds;
  }


  public SetShopOfferRequest inputCollectionItemAmounts(List<Integer> inputCollectionItemAmounts) {
    
    this.inputCollectionItemAmounts = inputCollectionItemAmounts;
    return this;
  }

  public SetShopOfferRequest addInputCollectionItemAmountsItem(Integer inputCollectionItemAmountsItem) {
    if (this.inputCollectionItemAmounts == null) {
      this.inputCollectionItemAmounts = new ArrayList<>();
    }
    this.inputCollectionItemAmounts.add(inputCollectionItemAmountsItem);
    return this;
  }

   /**
   * An array of amounts for each item id from the provided input collection that are required to use this offer. Item amounts array indices are reflective of the amount required for a given item id at the same index.
   * @return inputCollectionItemAmounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of amounts for each item id from the provided input collection that are required to use this offer. Item amounts array indices are reflective of the amount required for a given item id at the same index.")

  public List<Integer> getInputCollectionItemAmounts() {
    return inputCollectionItemAmounts;
  }


  public void setInputCollectionItemAmounts(List<Integer> inputCollectionItemAmounts) {
    this.inputCollectionItemAmounts = inputCollectionItemAmounts;
  }


  public SetShopOfferRequest inputCurrencyAddress(String inputCurrencyAddress) {
    
    this.inputCurrencyAddress = inputCurrencyAddress;
    return this;
  }

   /**
   * A valid EVM based ERC20 or MetaFab game currency contract address that for the currency required by this offer.
   * @return inputCurrencyAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A valid EVM based ERC20 or MetaFab game currency contract address that for the currency required by this offer.")

  public String getInputCurrencyAddress() {
    return inputCurrencyAddress;
  }


  public void setInputCurrencyAddress(String inputCurrencyAddress) {
    this.inputCurrencyAddress = inputCurrencyAddress;
  }


  public SetShopOfferRequest inputCurrencyId(String inputCurrencyId) {
    
    this.inputCurrencyId = inputCurrencyId;
    return this;
  }

   /**
   * A valid MetaFab currency id that represents the currency required by this offer.
   * @return inputCurrencyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A valid MetaFab currency id that represents the currency required by this offer.")

  public String getInputCurrencyId() {
    return inputCurrencyId;
  }


  public void setInputCurrencyId(String inputCurrencyId) {
    this.inputCurrencyId = inputCurrencyId;
  }


  public SetShopOfferRequest inputCurrencyAmount(BigDecimal inputCurrencyAmount) {
    
    this.inputCurrencyAmount = inputCurrencyAmount;
    return this;
  }

   /**
   * The amount of currency required by this offer. If an inputCurrencyAmount is provided without in input currency address or id, the native chain currency is used as the required currency.
   * @return inputCurrencyAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of currency required by this offer. If an inputCurrencyAmount is provided without in input currency address or id, the native chain currency is used as the required currency.")

  public BigDecimal getInputCurrencyAmount() {
    return inputCurrencyAmount;
  }


  public void setInputCurrencyAmount(BigDecimal inputCurrencyAmount) {
    this.inputCurrencyAmount = inputCurrencyAmount;
  }


  public SetShopOfferRequest outputCollectionAddress(String outputCollectionAddress) {
    
    this.outputCollectionAddress = outputCollectionAddress;
    return this;
  }

   /**
   * A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for output items given by this offer. &#x60;outputCollectionAddress&#x60; or &#x60;outputCollectionId&#x60; can optionally be provided.
   * @return outputCollectionAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for output items given by this offer. `outputCollectionAddress` or `outputCollectionId` can optionally be provided.")

  public String getOutputCollectionAddress() {
    return outputCollectionAddress;
  }


  public void setOutputCollectionAddress(String outputCollectionAddress) {
    this.outputCollectionAddress = outputCollectionAddress;
  }


  public SetShopOfferRequest outputCollectionId(String outputCollectionId) {
    
    this.outputCollectionId = outputCollectionId;
    return this;
  }

   /**
   * A valid MetaFab collection id that represents the collection for output items given by this offer. &#x60;outputCollectionAddress&#x60; or &#x60;outputCollectionId&#x60; can optionally be provided.
   * @return outputCollectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A valid MetaFab collection id that represents the collection for output items given by this offer. `outputCollectionAddress` or `outputCollectionId` can optionally be provided.")

  public String getOutputCollectionId() {
    return outputCollectionId;
  }


  public void setOutputCollectionId(String outputCollectionId) {
    this.outputCollectionId = outputCollectionId;
  }


  public SetShopOfferRequest outputCollectionItemIds(List<Integer> outputCollectionItemIds) {
    
    this.outputCollectionItemIds = outputCollectionItemIds;
    return this;
  }

  public SetShopOfferRequest addOutputCollectionItemIdsItem(Integer outputCollectionItemIdsItem) {
    if (this.outputCollectionItemIds == null) {
      this.outputCollectionItemIds = new ArrayList<>();
    }
    this.outputCollectionItemIds.add(outputCollectionItemIdsItem);
    return this;
  }

   /**
   * An array of item ids from the provided output collection that are given by this offer. Output items are automatically minted if the shop contract has the &#x60;minter&#x60; role for the output collection contract. Otherwise, they are transferred from the item balance held by the shop contract.
   * @return outputCollectionItemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of item ids from the provided output collection that are given by this offer. Output items are automatically minted if the shop contract has the `minter` role for the output collection contract. Otherwise, they are transferred from the item balance held by the shop contract.")

  public List<Integer> getOutputCollectionItemIds() {
    return outputCollectionItemIds;
  }


  public void setOutputCollectionItemIds(List<Integer> outputCollectionItemIds) {
    this.outputCollectionItemIds = outputCollectionItemIds;
  }


  public SetShopOfferRequest outputCollectionItemAmounts(List<Integer> outputCollectionItemAmounts) {
    
    this.outputCollectionItemAmounts = outputCollectionItemAmounts;
    return this;
  }

  public SetShopOfferRequest addOutputCollectionItemAmountsItem(Integer outputCollectionItemAmountsItem) {
    if (this.outputCollectionItemAmounts == null) {
      this.outputCollectionItemAmounts = new ArrayList<>();
    }
    this.outputCollectionItemAmounts.add(outputCollectionItemAmountsItem);
    return this;
  }

   /**
   * An array of amounts for each item id from the provided output collection that are given by this offer. Item amounts array indices are reflective of the amount required for a given item id at the same index.
   * @return outputCollectionItemAmounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of amounts for each item id from the provided output collection that are given by this offer. Item amounts array indices are reflective of the amount required for a given item id at the same index.")

  public List<Integer> getOutputCollectionItemAmounts() {
    return outputCollectionItemAmounts;
  }


  public void setOutputCollectionItemAmounts(List<Integer> outputCollectionItemAmounts) {
    this.outputCollectionItemAmounts = outputCollectionItemAmounts;
  }


  public SetShopOfferRequest outputCurrencyAddress(String outputCurrencyAddress) {
    
    this.outputCurrencyAddress = outputCurrencyAddress;
    return this;
  }

   /**
   * A valid EVM based ERC20 or MetaFab game currency contract address that for the currency given by this offer. The output currency amount is automatically minted if the shop contract has the &#x60;minter&#x60; role for the output currency contract. Otherwise, they are transferred from the currency balance held by the shop contract.
   * @return outputCurrencyAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A valid EVM based ERC20 or MetaFab game currency contract address that for the currency given by this offer. The output currency amount is automatically minted if the shop contract has the `minter` role for the output currency contract. Otherwise, they are transferred from the currency balance held by the shop contract.")

  public String getOutputCurrencyAddress() {
    return outputCurrencyAddress;
  }


  public void setOutputCurrencyAddress(String outputCurrencyAddress) {
    this.outputCurrencyAddress = outputCurrencyAddress;
  }


  public SetShopOfferRequest outputCurrencyId(String outputCurrencyId) {
    
    this.outputCurrencyId = outputCurrencyId;
    return this;
  }

   /**
   * A valid MetaFab currency id for the currency given by this offer.
   * @return outputCurrencyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A valid MetaFab currency id for the currency given by this offer.")

  public String getOutputCurrencyId() {
    return outputCurrencyId;
  }


  public void setOutputCurrencyId(String outputCurrencyId) {
    this.outputCurrencyId = outputCurrencyId;
  }


  public SetShopOfferRequest outputCurrencyAmount(BigDecimal outputCurrencyAmount) {
    
    this.outputCurrencyAmount = outputCurrencyAmount;
    return this;
  }

   /**
   * The amount of currency given by this offer. If an outputCurrencyAmount is provided without an output currency address or id, the native chain currency is used as the given currency.
   * @return outputCurrencyAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of currency given by this offer. If an outputCurrencyAmount is provided without an output currency address or id, the native chain currency is used as the given currency.")

  public BigDecimal getOutputCurrencyAmount() {
    return outputCurrencyAmount;
  }


  public void setOutputCurrencyAmount(BigDecimal outputCurrencyAmount) {
    this.outputCurrencyAmount = outputCurrencyAmount;
  }


  public SetShopOfferRequest maxUses(Integer maxUses) {
    
    this.maxUses = maxUses;
    return this;
  }

   /**
   * The maximum number of times this offer can be used in total. maxUses is collective across all uses of the offer. If 5 unique players use an offer, that counts as 5 offer uses. Exclude this or use 0 to allow unlimited uses.
   * @return maxUses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of times this offer can be used in total. maxUses is collective across all uses of the offer. If 5 unique players use an offer, that counts as 5 offer uses. Exclude this or use 0 to allow unlimited uses.")

  public Integer getMaxUses() {
    return maxUses;
  }


  public void setMaxUses(Integer maxUses) {
    this.maxUses = maxUses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetShopOfferRequest setShopOfferRequest = (SetShopOfferRequest) o;
    return Objects.equals(this.id, setShopOfferRequest.id) &&
        Objects.equals(this.inputCollectionAddress, setShopOfferRequest.inputCollectionAddress) &&
        Objects.equals(this.inputCollectionId, setShopOfferRequest.inputCollectionId) &&
        Objects.equals(this.inputCollectionItemIds, setShopOfferRequest.inputCollectionItemIds) &&
        Objects.equals(this.inputCollectionItemAmounts, setShopOfferRequest.inputCollectionItemAmounts) &&
        Objects.equals(this.inputCurrencyAddress, setShopOfferRequest.inputCurrencyAddress) &&
        Objects.equals(this.inputCurrencyId, setShopOfferRequest.inputCurrencyId) &&
        Objects.equals(this.inputCurrencyAmount, setShopOfferRequest.inputCurrencyAmount) &&
        Objects.equals(this.outputCollectionAddress, setShopOfferRequest.outputCollectionAddress) &&
        Objects.equals(this.outputCollectionId, setShopOfferRequest.outputCollectionId) &&
        Objects.equals(this.outputCollectionItemIds, setShopOfferRequest.outputCollectionItemIds) &&
        Objects.equals(this.outputCollectionItemAmounts, setShopOfferRequest.outputCollectionItemAmounts) &&
        Objects.equals(this.outputCurrencyAddress, setShopOfferRequest.outputCurrencyAddress) &&
        Objects.equals(this.outputCurrencyId, setShopOfferRequest.outputCurrencyId) &&
        Objects.equals(this.outputCurrencyAmount, setShopOfferRequest.outputCurrencyAmount) &&
        Objects.equals(this.maxUses, setShopOfferRequest.maxUses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, inputCollectionAddress, inputCollectionId, inputCollectionItemIds, inputCollectionItemAmounts, inputCurrencyAddress, inputCurrencyId, inputCurrencyAmount, outputCollectionAddress, outputCollectionId, outputCollectionItemIds, outputCollectionItemAmounts, outputCurrencyAddress, outputCurrencyId, outputCurrencyAmount, maxUses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetShopOfferRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inputCollectionAddress: ").append(toIndentedString(inputCollectionAddress)).append("\n");
    sb.append("    inputCollectionId: ").append(toIndentedString(inputCollectionId)).append("\n");
    sb.append("    inputCollectionItemIds: ").append(toIndentedString(inputCollectionItemIds)).append("\n");
    sb.append("    inputCollectionItemAmounts: ").append(toIndentedString(inputCollectionItemAmounts)).append("\n");
    sb.append("    inputCurrencyAddress: ").append(toIndentedString(inputCurrencyAddress)).append("\n");
    sb.append("    inputCurrencyId: ").append(toIndentedString(inputCurrencyId)).append("\n");
    sb.append("    inputCurrencyAmount: ").append(toIndentedString(inputCurrencyAmount)).append("\n");
    sb.append("    outputCollectionAddress: ").append(toIndentedString(outputCollectionAddress)).append("\n");
    sb.append("    outputCollectionId: ").append(toIndentedString(outputCollectionId)).append("\n");
    sb.append("    outputCollectionItemIds: ").append(toIndentedString(outputCollectionItemIds)).append("\n");
    sb.append("    outputCollectionItemAmounts: ").append(toIndentedString(outputCollectionItemAmounts)).append("\n");
    sb.append("    outputCurrencyAddress: ").append(toIndentedString(outputCurrencyAddress)).append("\n");
    sb.append("    outputCurrencyId: ").append(toIndentedString(outputCurrencyId)).append("\n");
    sb.append("    outputCurrencyAmount: ").append(toIndentedString(outputCurrencyAmount)).append("\n");
    sb.append("    maxUses: ").append(toIndentedString(maxUses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("inputCollectionAddress");
    openapiFields.add("inputCollectionId");
    openapiFields.add("inputCollectionItemIds");
    openapiFields.add("inputCollectionItemAmounts");
    openapiFields.add("inputCurrencyAddress");
    openapiFields.add("inputCurrencyId");
    openapiFields.add("inputCurrencyAmount");
    openapiFields.add("outputCollectionAddress");
    openapiFields.add("outputCollectionId");
    openapiFields.add("outputCollectionItemIds");
    openapiFields.add("outputCollectionItemAmounts");
    openapiFields.add("outputCurrencyAddress");
    openapiFields.add("outputCurrencyId");
    openapiFields.add("outputCurrencyAmount");
    openapiFields.add("maxUses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SetShopOfferRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SetShopOfferRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SetShopOfferRequest is not found in the empty JSON string", SetShopOfferRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SetShopOfferRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SetShopOfferRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SetShopOfferRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("inputCollectionAddress") != null && !jsonObj.get("inputCollectionAddress").isJsonNull()) && !jsonObj.get("inputCollectionAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputCollectionAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inputCollectionAddress").toString()));
      }
      if ((jsonObj.get("inputCollectionId") != null && !jsonObj.get("inputCollectionId").isJsonNull()) && !jsonObj.get("inputCollectionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputCollectionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inputCollectionId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("inputCollectionItemIds") != null && !jsonObj.get("inputCollectionItemIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputCollectionItemIds` to be an array in the JSON string but got `%s`", jsonObj.get("inputCollectionItemIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("inputCollectionItemAmounts") != null && !jsonObj.get("inputCollectionItemAmounts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputCollectionItemAmounts` to be an array in the JSON string but got `%s`", jsonObj.get("inputCollectionItemAmounts").toString()));
      }
      if ((jsonObj.get("inputCurrencyAddress") != null && !jsonObj.get("inputCurrencyAddress").isJsonNull()) && !jsonObj.get("inputCurrencyAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputCurrencyAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inputCurrencyAddress").toString()));
      }
      if ((jsonObj.get("inputCurrencyId") != null && !jsonObj.get("inputCurrencyId").isJsonNull()) && !jsonObj.get("inputCurrencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inputCurrencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inputCurrencyId").toString()));
      }
      if ((jsonObj.get("outputCollectionAddress") != null && !jsonObj.get("outputCollectionAddress").isJsonNull()) && !jsonObj.get("outputCollectionAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputCollectionAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outputCollectionAddress").toString()));
      }
      if ((jsonObj.get("outputCollectionId") != null && !jsonObj.get("outputCollectionId").isJsonNull()) && !jsonObj.get("outputCollectionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputCollectionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outputCollectionId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("outputCollectionItemIds") != null && !jsonObj.get("outputCollectionItemIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputCollectionItemIds` to be an array in the JSON string but got `%s`", jsonObj.get("outputCollectionItemIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("outputCollectionItemAmounts") != null && !jsonObj.get("outputCollectionItemAmounts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputCollectionItemAmounts` to be an array in the JSON string but got `%s`", jsonObj.get("outputCollectionItemAmounts").toString()));
      }
      if ((jsonObj.get("outputCurrencyAddress") != null && !jsonObj.get("outputCurrencyAddress").isJsonNull()) && !jsonObj.get("outputCurrencyAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputCurrencyAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outputCurrencyAddress").toString()));
      }
      if ((jsonObj.get("outputCurrencyId") != null && !jsonObj.get("outputCurrencyId").isJsonNull()) && !jsonObj.get("outputCurrencyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputCurrencyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outputCurrencyId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SetShopOfferRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SetShopOfferRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SetShopOfferRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SetShopOfferRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SetShopOfferRequest>() {
           @Override
           public void write(JsonWriter out, SetShopOfferRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SetShopOfferRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SetShopOfferRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SetShopOfferRequest
  * @throws IOException if the JSON string is invalid with respect to SetShopOfferRequest
  */
  public static SetShopOfferRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SetShopOfferRequest.class);
  }

 /**
  * Convert an instance of SetShopOfferRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

